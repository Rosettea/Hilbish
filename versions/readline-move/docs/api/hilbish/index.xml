<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Module hilbish on Hilbish</title><link>https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/</link><description>Recent content in Module hilbish on Hilbish</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/index.xml" rel="self" type="application/rss+xml"/><item><title>Module hilbish.aliases</title><link>https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/hilbish.aliases/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/hilbish.aliases/</guid><description>Introduction The alias interface deals with all command aliases in Hilbish.
Functions add(alias, cmd) This is an alias (ha) for the hilbish.alias function. delete(name) Removes an alias. list() -&amp;gt; table[string, string] Get a table of all aliases, with string keys as the alias and the value as the command. resolve(alias) -&amp;gt; string? Resolves an alias to its original command. Will thrown an error if the alias doesn&amp;rsquo;t exist. hilbish.aliases.add(alias, cmd) This is an alias (ha) for the hilbish.</description></item><item><title>Module hilbish.completion</title><link>https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/hilbish.completion/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/hilbish.completion/</guid><description>Introduction The completions interface deals with tab completions.
Functions bins(query, ctx, fields) -&amp;gt; entries (table), prefix (string) Return binaries/executables based on the provided parameters. call(name, query, ctx, fields) -&amp;gt; completionGroups (table), prefix (string) Calls a completer function. This is mainly used to call a command completer, which will have a name files(query, ctx, fields) -&amp;gt; entries (table), prefix (string) Returns file matches based on the provided parameters. handler(line, pos) This function contains the general completion handler for Hilbish.</description></item><item><title>Module hilbish.runner</title><link>https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/hilbish.runner/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/hilbish.runner/</guid><description>Introduction The runner interface contains functions that allow the user to change how Hilbish interprets interactive input. Users can add and change the default runner for interactive input to any language or script of their choosing. A good example is using it to write command in Fennel.
Runners are functions that evaluate user input. The default runners in Hilbish can run shell script and Lua code.
A runner is passed the input and has to return a table with these values.</description></item><item><title>Module hilbish.userDir</title><link>https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/hilbish.userdir/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosettea.github.io/Hilbish/versions/readline-move/docs/api/hilbish/hilbish.userdir/</guid><description> Introduction This interface just contains properties to know about certain user directories. It is equivalent to XDG on Linux and gets the user&amp;rsquo;s preferred directories for configs and data.
Static module fields config The user&amp;rsquo;s config directory data The user&amp;rsquo;s directory for program data</description></item></channel></rss>